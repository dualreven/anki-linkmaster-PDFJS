{
  "meta": {
    "title": "DevTools / PDF.js 日志采集与诊断 方案（修订版）",
    "role": "方案规划师 (agent-planner)",
    "summary": "在 logs\\pdf-viewer.log 缺失场景下，补充逐步诊断清单、可复现的 /json 示例、DevToolsLogCollector 的实现细节（含安全/退化策略）、清晰的日志 schema 与 sample entries、files_changed 细化、风险与缓解措施以及应用/回滚步骤。",
    "user_input": "用户将在会话中提供 PowerShell 命令 Get-Content .\\logs\\pdf-viewer.log -Tail 20 的输出（Asia/Shanghai 时区），目标是解析 PDF.js / CDP 事件并据此判断采集器行为与必要改动。",
    "creation_time": "2025-09-11T06:28:30+08:00",
    "file_number": "001",
    "forum_reference": "AIforum/20250911062830-forum-001.json"
  },
  "analysis": {
    "summary": "基于 reviewer 的 CR-1..CR-7 要求，补充并细化原方案，以便能在无原始日志情况下通过执行确定性检查项来定位问题，并在确认需要时安全地启用采集器或注入前端结构化事件以补齐数据采集链路。",
    "details": {
      "observations": [
        "初始草案已提出独立采集器草案，但未包含足够的可复现验证步骤与安全限制。为满足复核要求，已补充确定性诊断命令、/json 示例、配置项与回滚步骤。"
      ],
      "diagnostic_checklist (CR-1)": [
        "1. 确认 logs 目录与目标文件状态（PowerShell）:\n   - 命令: Test-Path .\\logs ; if (Test-Path .\\logs\\pdf-viewer.log) { Get-Item .\\logs\\pdf-viewer.log | Format-List * } else { Write-Output 'NO_FILE' }\n   - 预期: 若不存在，输出 'NO_FILE' 或显示文件属性（Size, LastWriteTime）。",
        "2. 列出相关进程与命令行（PowerShell）:\n   - 命令: Get-Process | Where-Object { $_.ProcessName -in 'node','python','app' } | Format-List Id,ProcessName,Path,StartTime, @{Name='CommandLine';Expression={(Get-CimInstance Win32_Process -Filter \"ProcessId=$($_.Id)\").CommandLine}} -ErrorAction SilentlyContinue\n   - 预期: 查看是否有启动参数包含 --remote-debugging-port 或 QTWEBENGINE_REMOTE_DEBUGGING 环境注入的线索。",
        "3. 检查 ai-launcher 启动信息与 process-info.json:\n   - 命令: Get-Content .\\logs\\process-info.json -ErrorAction SilentlyContinue | Select-Object -First 50\n   - 预期: 若通过 ai-launcher 启动，应包含服务条目与传递参数（或 env vars）示例。若无此文件，则说明未通过 ai-launcher 管理启动。",
        "4. 检查日志目录权限:\n   - 命令: icacls .\\logs 或 (Get-Acl .\\logs).Access\n   - 预期: 显示当前运行用户对 logs 目录的写权限。"
      ],
      "notes": [
        "以上命令输出需粘贴回 forum 供 reviewer 验证（请勿包含任何敏感凭证；若输出包含敏感行，请先用 <REDACTED> 替换）。"
      ]
    }
  },
  "proposed_patch": {
    "summary": "保留原草案思路，改进为生产安全就绪草案：采集器为可选、配置化、仅监听 loopback、具备轮询/重连/退避、队列异步写入、轮转与 redact 策略，并提供启用/禁用开关。",
    "key_design": {
      "process": "后端独立 worker 线程（或独立进程 scripts/start_devtools_collector.py），默认 disabled。仅在开发或经授权的调试会话启用。",
      "network": "仅连接 127.0.0.1 的 /json 与 webSocketDebuggerUrl，禁止绑定到 0.0.0.0。",
      "retries": "指数回退策略（初始 1s，最大 30s，最大尝试 N=10 可配置），每次连接失败记录 summary 但不阻塞主进程。",
      "write": "采用内存队列 + 后台写入线程，按大小/时间批量 flush；当磁盘使用率超过阈值（默认 90%）或日志文件超过 max_log_file_size_mb 时触发轮转或降级模式（只记录 summary）。",
      "redact": "在写入前对 details 字段应用 redact_patterns（默认：Bearer token、Set-Cookie、Authorization 等正则）并替换为 <REDACTED>。",
      "config": {
        "devtools_log_collector.enabled": false,
        "devtools_log_collector.bind_address": "127.0.0.1",
        "devtools_log_collector.port": 9222,
        "devtools_log_collector.poll_interval_ms": 5000,
        "devtools_log_collector.max_log_file_size_mb": 50,
        "devtools_log_collector.rotate_keep": 5,
        "devtools_log_collector.redact_patterns": [
          "Bearer\\s+[A-Za-z0-9\\-_.]+",
          "Set-Cookie",
          "Authorization"
        ],
        "devtools_log_collector.disk_usage_disable_pct": 90
      }
    },
    "pseudo_code_and_signatures (CR-2 required)": [
      "class DevToolsLogCollector(threading.Thread):",
      "    def __init__(self, config: Dict):",
      "        # start(), stop(), _poll_targets(), _connect_ws(ws_url), _enqueue(entry), _flush_worker()",
      "    def start(self):  # called from dedicated process or worker thread",
      "    def stop(self):",
      "    def _poll_targets(self):  # GET http://127.0.0.1:{port}/json with timeout",
      "    def _connect_ws(self, ws_url):  # websocket with timeout, recv loop, enqueue parsed messages",
      "    def _enqueue(self, entry):  # redact then push to queue",
      "    def _flush_worker(self):  # background flusher writing JSON-line and handling rotation"
    ],
    "unified_diff_note": "不在仓库直接应用。本方案在 solution.proposed_patch 中保留示例 unified-diff（草案）供开发者在 feature 分支上应用与 review。"
  },
  "testing_instructions": {
    "purpose": "验证 DevTools 可访问性、采集器在启用/禁用下行为、以及日志的格式/敏感信息处理。",
    "steps": [
      "A. 核查环境与 /json：\n   1) curl 示例 (PowerShell): Invoke-WebRequest -UseBasicParsing http://127.0.0.1:9222/json | Select-Object -Expand Content\n   2) 预期返回片段（示例，非敏感）:\n      [{\n        \"description\":\"\",\n        \"devtoolsFrontendUrl\":\"/devtools/inspector.html?ws=127.0.0.1:9222/devtools/page/1\",\n        \"id\":\"1\",\n        \"title\":\"PDF Viewer - localhost:3000\",\n        \"type\":\"page\",\n        \"url\":\"http://localhost:3000/\",\n        \"webSocketDebuggerUrl\":\"ws://127.0.0.1:9222/devtools/page/1\"\n      }]\n   3) 若无返回，请确保应用以支持 remote debugging 的方式启动（参见 ai-launcher 或 env var）。",
      "B. 启动采集器（在受控开发机器上）:\n   1) 在 feature 分支创建并应用补丁（见 apply_instructions）。\n   2) 启用配置: set 环境变量 DEVTOOLS_COLLECTOR_ENABLED=true 或修改配置文件。\n   3) 启动 collector: python scripts/start_devtools_collector.py（该脚本为独立进程，不应阻塞主应用）。",
      "C. 使用 UI 加载 test_files/test.pdf，观察采集器输出:\n   - 命令: Get-Content .\\logs\\pdf-viewer.log -Wait -Tail 200\n   - 预期: 连续的 JSON-line 条目，包含 timestamp, level, source, event, details（见 expected_log_format）。",
      "D. 故障场景验证:\n   - 模拟无法连接的场景（关闭 CDP 端口），确认采集器记录 CDPConnectionFailed 并按照重试策略退避，不阻塞主进程。",
      "E. 验证 redact 与轮转:\n   - 在日志中触发包含 Authorization 或 Set-Cookie 的控制台消息，确认采集器在写入前替换为 <REDACTED>。"
    ]
  },
  "expected_log_format (CR-3 required)": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
      "ts": { "type": "string", "format": "date-time", "description": "ISO8601 带时区" },
      "level": { "type": "string", "enum": ["info","warn","error"] },
      "source": { "type": "string", "description": "DevToolsLogCollector" },
      "event": { "type": "string" },
      "details": { "type": "object" }
    },
    "required": ["ts","level","source","event"]
  },
  "sample_log_entries (CR-3 required)": [
    "{\"ts\":\"2025-09-11T06:25:12+08:00\",\"level\":\"info\",\"source\":\"DevToolsLogCollector\",\"event\":\"TargetList\",\"details\":{\"count\":1,\"targets\":[{\"id\":\"1\",\"title\":\"PDF Viewer\",\"url\":\"http://localhost:3000\",\"webSocketDebuggerUrl\":\"ws://127.0.0.1:9222/devtools/page/1\"}]}}",
    "{\"ts\":\"2025-09-11T06:26:05+08:00\",\"level\":\"info\",\"source\":\"DevToolsLogCollector\",\"event\":\"ConsoleMessage\",\"details\":{\"targetId\":\"1\",\"type\":\"log\",\"text\":\"{\\\"event\\\":\\\"pageRendered\\\",\\\"page\\\":1,\\\"pdf_id\\\":\\\"test.pdf\\\"}\"}}",
    "{\"ts\":\"2025-09-11T06:26:09+08:00\",\"level\":\"warn\",\"source\":\"DevToolsLogCollector\",\"event\":\"CDPConnectionFailed\",\"details\":{\"attempt\":3,\"lastError\":\"connection refused\"}}"
  ],
  "files_changed (CR-4 required)": [
    {
      "path": "src/backend/log_collector/devtools_collector.py",
      "type": "added",
      "details": "包含 DevToolsLogCollector 类；关键函数/方法：start(), stop(), _poll_targets(), _connect_ws(ws_url), _enqueue_log_entry(), _flush_worker(); 使用队列异步写入，支持 redact、轮转。"
    },
    {
      "path": "scripts/start_devtools_collector.py",
      "type": "added",
      "details": "独立进程入口，用于本地以非阻塞方式运行采集器以便调试。"
    },
    {
      "path": "src/backend/app/application.py",
      "type": "modified (optional)",
      "details": "可选地在应用 main 启动路径中根据配置创建并启动 collector（仅在 dev 或经授权场景启用）。示例：if config['devtools_log_collector']['enabled']: collector = DevToolsLogCollector(config); collector.start()"
    },
    {
      "path": "docs/DEVTOOLS-COLLECTOR.md",
      "type": "added",
      "details": "文档：如何启用/禁用采集器、配置项说明、安全注意事项、回滚步骤与常见故障排查命令。"
    }
  ],
  "apply_instructions": {
    "create_branch": "git checkout -b feat/devtools-log-collector",
    "apply_patch": "保存统一 diff 为 feat_devtools_log_collector.diff；git apply feat_devtools_log_collector.diff && git add . && git commit -m 'feat: add devtools log collector (configurable, safe defaults)'",
    "run": "python scripts/start_devtools_collector.py  # 在开发机器上作为独立进程运行",
    "rollback": "git checkout main && git branch -D feat/devtools-log-collector  # 若已合并, 使用 git revert <commit>",
    "notes": "在合并前请在 feature 分支上进行 code review、单元测试、集成测试及安全审计。"
  },
  "risk_and_mitigation (CR-5 required)": {
    "risks": [
      "日志暴露敏感信息（控制台可能包含 tokens/cookie/URLs）",
      "磁盘填满导致系统功能受限",
      "采集器异常导致主进程阻塞或资源泄露",
      "CDP 端点错误配置导致远程暴露（安全风险）",
      "跨平台兼容性问题（QtWebEngine 与内嵌浏览器差异）"
    ],
    "mitigations": [
      "默认禁用采集器（enabled=false），仅在受控开发/调试环境或经授权情形启用。",
      "只绑定到 loopback(127.0.0.1) 并在配置中提供启用开关；在部署中须通过运维策略控制是否开启。",
      "在写入前应用 redact_patterns，将敏感关键词替换为 <REDACTED>；记录写入审计以便追踪。",
      "实现磁盘使用检测与自动禁用：若磁盘使用率 > devtools_log_collector.disk_usage_disable_pct (默认 90%) 则暂停写入并发送告警。",
      "写入采用队列 + 后台 flusher，捕获异常并记录 summary；遇到持续失败时进入退化模式（只记录统计汇总而非完整消息）。",
      "提供回滚/应急步骤：临时禁用（DEVTOOLS_COLLECTOR_ENABLED=false）并重启服务；或执行 git revert <commit> 快速回退。"
    ],
    "example_config (CR-5 required)": {
      "devtools_log_collector": {
        "enabled": false,
        "bind_address": "127.0.0.1",
        "port": 9222,
        "poll_interval_ms": 5000,
        "max_log_file_size_mb": 50,
        "rotate_keep": 5,
        "redact_patterns": [
          "Bearer\\s+[A-Za-z0-9\\-_.]+",
          "Set-Cookie",
          "Authorization"
        ],
        "disk_usage_disable_pct": 90
      }
    }
  },
  "references": [
    {
      "title": "Chrome DevTools Protocol (CDP)",
      "url": "https://chromedevtools.github.io/devtools-protocol/"
    },
    {
      "title": "Qt WebEngine Remote Debugging",
      "url": "https://doc.qt.io/qt-6/qtwebengine-features.html#remote-debugging"
    }
  ],
  "conclusion": {
    "summary": "本修订版回应了 reviewer 的 CR-1..CR-7 要求：增加了可复现的诊断命令、/json 示例、采集器的配置化与安全边界、日志 schema 与样例、files_changed 的精确描述、风险缓解策略与回滚步骤。下一步：将此修订版提交给 agent-plan-reviewer 再次复核；若 reviewer 仍要求实际命令输出（例如 /json 返回），请按 diagnostic_checklist 执行并把输出粘贴回 forum 以便完成最终验收。",
    "next_steps": [
      "1) 将本文件作为修订版提交到 AIforum（已写入），并在 forum 中追加本次修改摘要与请求 reviewer 复核（已完成）。",
      "2) 若 reviewer 需要真实 /json 输出或 ai-launcher 日志片段，请执行 diagnostic_checklist 中的命令并把输出粘贴到 forum（注意替换敏感信息）。",
      "3) reviewer 若同意（opinion==\"agree\"），planner 将把本方案标记为最终定稿并返回 solution 与 forum 文件路径。"
    ]
  }
}