mcp服务器:
  - 服务器名: context7
    介绍:
      - 该服务器提供最新的各类开发库的文档,方便智能体查询API与代码用法
    使用场景:
      - 智能体需要调用某个库的API,但不清楚具体用法
      - 智能体需要了解某个库的功能与限制
      - 智能体需要查找某个功能的实现示例
    使用步骤:
      1. 使用 resolve-library-id 函数,根据库名获取对应的库ID
      2. 使用 get-library-docs 函数,根据库ID与查询主题获取相关文档列表
      3. 根据返回的文档列表,选择合适的文档进行阅读与参考
    常用工具:
      - resolve-library-id:
          描述: 根据库名解析对应的库ID
          输入参数:
            - libraryName: 库名字符串
          返回值: 对应的库ID字符串
      - get-library-docs:
          描述: 获取指定库的文档列表
          输入参数:
            - context7CompatibleLibraryID: 库ID字符串
            - topic: 查询主题关键词,可选(通常使用英文)
            - tokens: 最大返回文档数,默认10000
          返回值: 文档内容

  - 服务器名: sequentialthinking 
    介绍:
      - 这是一个“可随想随改”的逐步思考框架。它允许你在求解过程中不断回溯、修正、分叉或深化，从而把复杂问题拆解成可迭代的小步。
    使用场景:
      - 需要解决复杂问题,但不确定最佳路径
      - 需要在思考过程中灵活调整策略
      - 需要探索多种可能性而非单一路径
      - 问题复杂度高，一开始无法看清全貌
      - 需要多步规划，且可能中途调整方向
      - 存在大量信息，需要实时过滤无关内容
      - 任务需要长期保持上下文（跨步记忆）
      - 对答案正确性要求高，需要反复验证
    常用工具:
      sequentialthinking:
        描述: 
          - 可随时增删“总步数”(total_thoughts)。
          - 任何一步都可以质疑、修订、甚至推翻之前的结论。
          - 支持“分叉”(branch)——同时探索多条思路。
          - 每一步都可生成或验证“假设”(hypothesis)。
          - 不确定时可以明确标出“不确定”。
          - 在真正满意之前，永远可以把 next_thought_needed 设为 true，继续思考。
        输入参数:
          - thought: (必填) 当前思考的内容, 本步具体在想什么、质疑什么、修正什么
          - nextThoughtNeeded: (必填) 是否还需下一步, 只要有不确定就填 true
          - thoughtNumber: (必填) 当前步号,从1开始计数,后续逐渐追加
          - totalThoughts: (必填) 预估总步数, 可随时调整
          - isRevision: (可选) 若本步在修订之前某步，填 true
          - revisesThought: (可选) 若在修订,则填被修订的步号
          - branchFromThought: (可选) 若开新分支，填“母步”步号
          - branchId: (可选) 给新分支起个唯一标识
          - needsMoreThoughts: (可选) 发现步数不够,本来以为到结尾，发现还需更多步，可显式标出	
        
        返回值: |
          {
            "thoughtNumber": 1,
            "totalThoughts": 5,
            "nextThoughtNeeded": true,
            "branches": [],
            "thoughtHistoryLength": 1
          }
        例子: 
        - |
          <use_mcp_tool>
            <server_name>sequentialthinking</server_name>
            <tool_name>sequentialthinking</tool_name>
            <arguments>
              {
                "thought": "用户需要实现Tabulator的多行选中功能，配合批量删除操作。我需要分析：1）当前Tabulator配置的问题；2）如何启用多行选中；3）如何获取选中行的PDF_id；4）如何与WebSocket和后端集成；5）前端重绘机制。",
                "nextThoughtNeeded": true,
                "thoughtNumber": 1,
                "totalThoughts": 5,
                "isRevision": false
              }
            </arguments>
          </use_mcp_tool>
        - 一段完整的连续思考:
          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "小明需要在 2025-08-31 当天 17:00 前抵达机场。我要帮他选择坐地铁还是打车。先列出已知信息：航班起飞 19:00，建议提前 2 h 到机场，因此 17:00 是硬截止。",
              "next_thought_needed": true,
              "thought_number": 1,
              "total_thoughts": 5,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>

          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "收集关键变量：① 当前时间 14:00；② 距离机场 45 km；③ 地铁线路需换乘 1 次，官方行程 60 min；④ 打车走高速，正常路况 40 min；⑤ 天气晴，无突发天气预警。初步假设：打车更快。",
              "next_thought_needed": true,
              "thought_number": 2,
              "total_thoughts": 5,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>

          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "生成可验证假设 H1：打车可在 16:40 前到达机场（14:00 出发 + 40 min 车程 = 14:40 到达，留有余量）。",
              "next_thought_needed": true,
              "thought_number": 3,
              "total_thoughts": 5,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>

          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "验证假设 H1：查询实时路况 API，发现高速出城方向有轻度拥堵，模型预测实际车行时间 55 min，而非 40 min。因此 14:00 出发将在 14:55 到达，仍早于 17:00。结论：H1 成立，但余量缩小。",
              "next_thought_needed": true,
              "thought_number": 4,
              "total_thoughts": 5,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>

          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "我突然想到：如果 15:00 以后出现突发事故，打车可能大幅延误。于是决定开一条分支，评估地铁方案的鲁棒性。",
              "next_thought_needed": true,
              "thought_number": 5,
              "branch_from_thought": 4,
              "branch_id": "B1",
              "total_thoughts": 7,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>

          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "地铁方案评估：固定 60 min 行程，不受地面交通影响；班次间隔 5 min，若错过一班最多 +5 min。14:00 进站可确保 15:05 到达机场，远早于 17:00。风险极低。",
              "next_thought_needed": true,
              "thought_number": 6,
              "total_thoughts": 7,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>

          - |
            <use_mcp_tool>
                <server_name>sequentialthinking</server_name>
                <tool_name>sequentialthinking</tool_name>
                <arguments>
            {
              "thought": "综合比较：打车虽更快，但余量受路况影响；地铁准时且风险更低。最终建议：坐地铁。给出唯一答案：小明应选择地铁，14:00 出发，预计 15:05 抵达机场，可确保 17:00 前到达。思考完毕。",
              "next_thought_needed": false,
              "thought_number": 7,
              "total_thoughts": 7,
              "is_revision": false
            }
                </arguments>
            </use_mcp_tool>
  - 服务器名: time 
    介绍: 用于获取准确的当地时间
    常用工具:
      get_current_time:
        输入参数: 
          timezone:  "Asia/Shanghai"
        例子: |
            <use_mcp_tool>
              <server_name>time</server_name>
              <tool_name>get_current_time</tool_name>
              <arguments>{ "timezone": "Asia/Shanghai"}</arguments>
            </use_mcp_tool>
